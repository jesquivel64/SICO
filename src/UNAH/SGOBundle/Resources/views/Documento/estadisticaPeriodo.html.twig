{% extends "UNAHSGOBundle::layout.html.twig" %}
{% block content %}
<div class="row">
  <section class="span12">
    <hgroup class="page-header">
      <h1>Estad&iacute;sticas <small> del {{ inicio|date("d/m/Y") }} al {{ fin|date("d/m/Y") }}</small></h1>
    </hgroup>
  </section>
</div>
<div class="row">
  <div class="span6">
    <article class="graphic">
      <hgroup class="page-header">
        <h2>Estad&iacute;sticas Generales</h2>
      </hgroup>
      <canvas id="flujo" width="400" height="400"></canvas>
      <p>
        {{ recibidos }} Documentos han sido Recibidos
      </p>
      <p>
        {{ enviados }} Documentos han sido Enviados
      </p>
    </article>
  </div>
  <div class="span6">
    <article class="graphic">
      <hgroup class="page-header">
        <h2>Documentos Recibidos por Tipo</h2>
      </hgroup>
      <canvas id="tipo-recibido" width="400" height="400"></canvas>
      {% for dato in tipo_recibido %}
      <p>
        {{ dato.cantidad }} {{ dato.nombre }}(s)
      </p>
      {% endfor %}
    </article>
  </div>
</div>
<div class="row">
  <div class="span6">
    <article class="graphic">
      <hgroup class="page-header">
        <h2>Relaci&oacute;n entre Recibidos y Respondidos</h2>
      </hgroup>
      <canvas id="eficiencia" width="400" height="400"></canvas>
      <p>
        {{ respondidos }} Documentos han obtenido Respuesta
      </p>
      <p>
        {{ noRespondidos }} Documentos Recibidos sin Respuesta
      </p>
    </article>
  </div>
  <div class="span6">
    <article class="graphic">
      <hgroup class="page-header">
        <h2>Documentos Recibidos por Dependencia</h2>
      </hgroup>
      <canvas id="dependencias" width="400" height="400"></canvas>
      {% for dato in emisor %}
      <p>
        {{ dato.nombre }}: {{ dato.cantidad }}
      </p>
      {% endfor %}
    </article>
  </div>
</div>
<div class="row">
  <div class="span6">
    <article class="graphic">
      <hgroup class="page-header">
        <h2>Documentos Enviados por Tipo</h2>
      </hgroup>
      <canvas id="tipo" width="400" height="400"></canvas>
      {% for dato in tipo %}
      <p>
        {{ dato.cantidad }} {{ dato.nombre }}(s)
      </p>
      {% endfor %}
    </article>
  </div>
  <div class="span6">
    <article class="graphic">
      <hgroup class="page-header">
        <h2>Documentos Recibidos por Tipo de Solicitud</h2>
      </hgroup>
      <canvas id="tipificacion" width="400" height="400"></canvas>
      {% for dato in tipificacion %}
      <p>
        {{ dato.cantidad }} {{ dato.nombre }}(s)
      </p>
      {% endfor %}
    </article>
  </div>
</div>
{% endblock %}
{% block javascript %}
<script src="{{ asset('bundles/unahsgo/js/Chart.min.js') }}" type="text/javascript"></script>
<script type="text/javascript">
  var ctx = document.getElementById("flujo").getContext("2d");
  var data = {
    labels : ["Recibidos","Enviados"],
    datasets : [
      {
        fillColor : "rgba(220,220,220,0.5)",
        strokeColor : "rgba(220,220,220,1)",
        pointColor : "rgba(220,220,220,1)",
        pointStrokeColor : "#fff",
        data : [{{ recibidos }}, {{ enviados }}]
      },
    ]
  };
  var eficiencia = new Chart(ctx).Bar(data, {
    scaleOverride : true,
    scaleSteps : Math.max({{ recibidos }}, {{ enviados }}) + 1,
    scaleStepWidth : 1,
    scaleStartValue : 0
  });
  
  var ctx = document.getElementById("eficiencia").getContext("2d");
  data = [
    {
      value: {{ respondidos }},
      label: 'Respondidos: ' + {{ respondidos }},
      labelColor : 'white',
      color: '#3C13AF'
    },
    {
      value: {{ noRespondidos }},
      label: 'No Respondidos: ' + {{ noRespondidos }},
      labelColor : 'white',
      color: '#FFD600'
    }
  ]
  var eficiencia = new Chart(ctx).Pie(data);
  
  var ctx = document.getElementById("dependencias").getContext("2d");
  data = [
    {% for dato in emisor %}
    {
      value: {{ dato.cantidad }},
      label: '{{ dato.nombre }}',
      labelColor : 'white',
      color: '{{ dato.color }}'
    },
    {% endfor %}
    {
      value: 0
    }
  ]
  var emisor = new Chart(ctx).Pie(data);
  
  var ctx = document.getElementById("tipo").getContext("2d");
  data = [
    {% for dato in tipo %}
    {
      value: {{ dato.cantidad }},
      label: '{{ dato.nombre }}',
      labelColor : 'white',
      color: '{{ dato.color }}'
    },
    {% endfor %}
    {
      value: 0
    }
    ]
  var tipo = new Chart(ctx).Pie(data);
  
  var ctx = document.getElementById("tipificacion").getContext("2d");
  data = [
    {% for dato in tipificacion %}
    {
      value: {{ dato.cantidad }},
      label: '{{ dato.nombre }}',
      labelColor : 'white',
      color: '{{ dato.color }}'
    },
    {% endfor %}
    {
      value: 0
    }
    ]
  var tipo = new Chart(ctx).Pie(data);
  
  var ctx = document.getElementById("tipo-recibido").getContext("2d");
  var data = {
    labels : [{% for dato in tipo_recibido %} "{{ dato.nombre }}", {% endfor %}],
    datasets : [
      {
        fillColor : "rgba(220,220,220,0.5)",
        strokeColor : "rgba(220,220,220,1)",
        pointColor : "rgba(220,220,220,1)",
        pointStrokeColor : "#fff",
        data : [{% for dato in tipo_recibido %} {{ dato.cantidad }}, {% endfor %}]
      },
    ]
  };
  var tipo_recibido = new Chart(ctx).Bar(data, {
    scaleOverride : true,
    scaleSteps : Math.max({% for dato in tipo_recibido %} {{ dato.cantidad }}, {% endfor %} 1) + 1,
    scaleStepWidth : 1,
    scaleStartValue : 0
  });
</script>
{% endblock %}